// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NFTBankCreated extends ethereum.Event {
  get params(): NFTBankCreated__Params {
    return new NFTBankCreated__Params(this);
  }
}

export class NFTBankCreated__Params {
  _event: NFTBankCreated;

  constructor(event: NFTBankCreated) {
    this._event = event;
  }

  get nftBankProxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NFTBankFactory extends ethereum.SmartContract {
  static bind(address: Address): NFTBankFactory {
    return new NFTBankFactory("NFTBankFactory", address);
  }

  impl(): Address {
    let result = super.call("impl", "impl():(address)", []);

    return result[0].toAddress();
  }

  try_impl(): ethereum.CallResult<Address> {
    let result = super.tryCall("impl", "impl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _impl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateProxyCall extends ethereum.Call {
  get inputs(): CreateProxyCall__Inputs {
    return new CreateProxyCall__Inputs(this);
  }

  get outputs(): CreateProxyCall__Outputs {
    return new CreateProxyCall__Outputs(this);
  }
}

export class CreateProxyCall__Inputs {
  _call: CreateProxyCall;

  constructor(call: CreateProxyCall) {
    this._call = call;
  }

  get mintCap(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CreateProxyCall__Outputs {
  _call: CreateProxyCall;

  constructor(call: CreateProxyCall) {
    this._call = call;
  }
}
